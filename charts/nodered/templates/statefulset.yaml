apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "nodered.fullname" . }}
  labels:
    {{- include "nodered.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "nodered.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "nodered.fullname" . }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "nodered.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "nodered.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: configure
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: busybox
          command:
            - chown
            - "1000:1000"
            - /data
          volumeMounts:
            - name: {{ .Values.dataVolume | default "data" }}
              mountPath: /data
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: "TZ"
              value: {{ .Values.timezone | default "Australia/Melbourne" }}
          ports:
            - name: http
              containerPort: 1880
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: {{ .Values.dataVolume | default "data" }}
              mountPath: /data
      {{- with .Values.persistent }}
      volumes:
        - persistentVolumeClaim:
            claimName: {{ .Values.dataVolume | default "data" }}
      {{- end }}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: {{ .Values.dataVolume | default "data" }}
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: {{ .Values.dataSize | default "2Gi" }}
